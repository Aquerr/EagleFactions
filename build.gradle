buildscript {
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.4"
    }
}

plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "2.0.4"
}

allprojects {
    description = 'A factions plugin that will make managing your battle-server easier. :)'
    group = "io.github.aquerr.eaglefactions"
    version = "v0.13.0"

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://jitpack.io' }
    }
} 

artifacts {
    archives shadowJar
}

dependencies {
    compile project(":common")
    compile project(":sponge-api6")
    compile project(":sponge-api7")
}

shadowJar {
//    archiveName = "EagleFactions-Sponge-1.0.0-SNAPSHOT.jar"

    if(System.getenv("JENKINS_HOME")) {
        version = version + "_" + System.getenv("BUILD_NUMBER")
        println("File name => " + baseName)
    } else {
        version = version + "-SNAPSHOT"
    }
}

//shadowJar {
//    archiveName = "EagleFactions-Sponge-1.0.0.jar";
//}
//
//artifacts {
//    archives shadowJar
//}

//task copyJarsFromSubprojects(type: Copy) {
//    def jars=[];
//    subprojects.each {
//        jars+=it.buildDir.toPath().resolve("libs").toFile()
//        println(it.buildDir.toPath().resolve("libs"))
//    }
//    from jars
//    into 'build/libs'
//}

//task explodedDist(type: Copy) {
//    into "$buildDir/explodedDist"
//    subprojects {
//        from tasks.withType(Jar)
//    }
//}

//
//task allJar(type: Jar, dependsOn: subprojects.collect{it+"compileJava"}) {
//    baseName = "allJar"
//    from files(subprojects.collect{project(it).sourceSets.main.output})
//}
//
//artifacts {
//    archives allJar
//}

tasks.create("publishBuildOnDiscord") {
    group = "Publishing"
    description = "Task for publishing the jar file to discord's jenkins channel"
    doLast {
        String[] jarFiles = new FileNameFinder().getFileNames(project.buildDir.getPath(), "**/*.jar")

        if(jarFiles.length > 0) {
            println("Found jar files: " + jarFiles)

            String lastCommitDescription = "git log -1 --pretty=%B".execute().getText()
            if(lastCommitDescription == null || lastCommitDescription == "") {
                lastCommitDescription = "No changelog provided"
            }

            exec {
                commandLine("java", "-jar", "..\\jenkinsdiscordbot-1.0.jar", "EagleFactions", jarFiles[0], lastCommitDescription)
            }
        }
    }
}