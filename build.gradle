plugins {
    id 'java'
    id 'org.spongepowered.plugin' version '0.9.0'
}

group = pluginGroup
version = pluginVersion
description = 'A factions plugin that will make managing your battle-server easier. :)'

sourceCompatibility = 1.8

allprojects {
    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://jitpack.io' }
    }
}

dependencies {
    compile 'org.spongepowered:spongeapi:7.1.0'
    compile 'com.github.rojo8399:PlaceholderAPI:4.5.1'
    compile group: 'com.h2database', name: 'h2', version: '1.3.148'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.15'
    //compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.7.2'
}

jar {
    if(System.getenv("JENKINS_HOME")) {
        version = version + "_" + System.getenv("BUILD_NUMBER")
        println("File name =>" + baseName)
    }
}

task fatJar(type: Jar) {
    from {
        configurations.compile.collect {it.isDirectory() ? it : zipTree(it)}
    }
    with jar
}

tasks.create("setPluginVersion") {
    doLast {

    }
}

tasks.create("publishBuildOnDiscord") {
    group = "Publishing"
    description = "Task for publishing the jar file to discord's jenkins channel"
    doLast {
        String[] jarFiles = new FileNameFinder().getFileNames(project.buildDir.getPath(), "**/*.jar")

        if(jarFiles.length > 0) {
            println("Found jar files: " + jarFiles)

            String lastCommitDescription = "git log -1 --pretty=%B".execute().getText()
            if(lastCommitDescription == null || lastCommitDescription == "") {
                lastCommitDescription = "No changelog provided"
            }

            exec {
                commandLine("java", "-jar", "..\\jenkinsdiscordbot-1.0.jar", "EagleFactions", jarFiles[0], lastCommitDescription)
            }
        }
    }
}