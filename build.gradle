plugins {
    id 'java'
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'org.spongepowered.plugin' version '0.9.0'
}

allprojects {
    description = 'A factions plugin that will make managing your battle-server easier. :)'
    group = "io.github.aquerr"
    version = "0.15.2"

    project.tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://repo.spongepowered.org/maven' }
        maven { url 'https://jitpack.io' }
//        maven { url "https://repo.codemc.org/repository/maven-releases" }
    }
}

dependencies {
    implementation project(":EagleFactionsAPI")
    implementation project(":common")

    testImplementation project(':EagleFactionsAPI')
    testImplementation 'org.spongepowered:spongeapi:7.2.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.0'
    testImplementation 'org.mockito:mockito-core:3.2.4'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.3.0'
}

shadowJar {
    archiveClassifier = ''
}

build.finalizedBy shadowJar
jar.enabled = false

test {
    useJUnitPlatform()
}

tasks.create("publishBuildOnDiscord") {
    group = "Publishing"
    description = "Task for publishing the jar file to discord's jenkins channel"
    doLast {
        String[] jarFiles = new FileNameFinder().getFileNames(project.buildDir.getPath(), "**/*.jar")

        if(jarFiles.length > 0) {
            println("Found jar files: " + jarFiles)

            String lastCommitDescription = "git log -1 --pretty=%B".execute().getText()
            if(lastCommitDescription == null || lastCommitDescription == "") {
                lastCommitDescription = "No changelog provided"
            }

            exec {
                commandLine("java", "-jar", "..\\jenkinsdiscordbot-1.0.jar", "EagleFactions", jarFiles[0], lastCommitDescription)
            }
        }
    }
}