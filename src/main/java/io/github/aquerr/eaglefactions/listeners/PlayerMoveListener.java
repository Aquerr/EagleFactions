package io.github.aquerr.eaglefactions.listeners;import com.flowpowered.math.vector.Vector3i;import io.github.aquerr.eaglefactions.EagleFactions;import io.github.aquerr.eaglefactions.PluginInfo;import io.github.aquerr.eaglefactions.logic.FactionLogic;import io.github.aquerr.eaglefactions.logic.MainLogic;import io.github.aquerr.eaglefactions.managers.PlayerManager;import org.spongepowered.api.Sponge;import org.spongepowered.api.entity.living.player.Player;import org.spongepowered.api.event.Listener;import org.spongepowered.api.event.entity.MoveEntityEvent;import org.spongepowered.api.event.filter.cause.Root;import org.spongepowered.api.text.Text;import org.spongepowered.api.text.chat.ChatTypes;import org.spongepowered.api.text.format.TextColors;import org.spongepowered.api.world.Location;import org.spongepowered.api.world.World;public class PlayerMoveListener{    @Listener    public void onPlayerMove(MoveEntityEvent event, @Root Player player)    {        //Check if player changed chunk.        Vector3i lastBlockPosition = PlayerManager.getPlayerBlockPosition(player.getUniqueId());        if (lastBlockPosition != null)        {            World world = player.getWorld();            Location lastLocation = new Location(world, lastBlockPosition);            Location newLocation = player.getLocation();            if(!lastLocation.getChunkPosition().equals(player.getLocation().getChunkPosition()))            {                //World world = player.getWorld();                Vector3i oldChunk = lastLocation.getChunkPosition();                Vector3i newChunk = newLocation.getChunkPosition();                String oldChunkFactionName = FactionLogic.getFactionNameByChunk(world.getUniqueId(), oldChunk);                String newChunkFactionName = FactionLogic.getFactionNameByChunk(world.getUniqueId(), newChunk);                //Inform a player about entering faction's land.                if(!oldChunkFactionName.equals(newChunkFactionName))                {                    if(!newChunkFactionName.equals("SafeZone") && !newChunkFactionName.equals("WarZone") && !newChunkFactionName.equals(""))                    {                        if(!EagleFactions.AdminList.contains(player.getUniqueId()))                        {                            if(!FactionLogic.hasOnlinePlayers(FactionLogic.getFactionNameByChunk(world.getUniqueId(), newChunk)) && MainLogic.getBlockEnteringFactions())                            {                                //Teleport player back if all entering faction's players are offline.                                player.sendMessage(Text.of(PluginInfo.ErrorPrefix, TextColors.RED, "You can't enter this faction! None of this faction's players are online!"));                                player.setLocation(new Location<World>(world, lastLocation.getBlockPosition()));                                return;                            }                        }                    }                    else if(oldChunkFactionName.equals("WarZone") && newChunkFactionName.equals("SafeZone"))                    {                        if(!EagleFactions.AdminList.contains(player.getUniqueId()) && MainLogic.shouldBlockSafeZoneFromWarZone())                        {                            //Block player before going to SafeZone from WarZone                            player.setLocation(new Location<World>(world, lastLocation.getBlockPosition()));                            player.sendMessage(Text.of(PluginInfo.ErrorPrefix, TextColors.RED, "You can't enter SafeZone when you are in WarZone"));                            return;                        }                    }                    if(newChunkFactionName == "") newChunkFactionName = "Wilderness";                    //TODO: Show respective colors for enemy faction, alliance & neutral.                    Text information = Text.builder()                            .append(Text.of("You have entered faction ", TextColors.GOLD, newChunkFactionName))                            .build();                    player.sendMessage(ChatTypes.ACTION_BAR, information);                }                //Check if player has tuned on AutoClaim                if(EagleFactions.AutoClaimList.contains(player.getUniqueId()))                {                    Sponge.getCommandManager().process(player, "f claim");                }                //Check if player has turned on AutoMap                if(EagleFactions.AutoMapList.contains(player.getUniqueId()))                {                    Sponge.getCommandManager().process(player, "f map");                }            }        }        //TODO:Bad approach... change it so that the player's position does not set every time player moves. This will increase performance.        //Set new player chunk location.        PlayerManager.setPlayerBlockPosition(player.getUniqueId(), player.getLocation().getBlockPosition());        return;    }}